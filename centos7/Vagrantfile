# -*- mode: ruby -*-
# vi: set ft=ruby :

$instance_name = "centos7-develop"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.

  config.vm.box = "bento/centos-7.3"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 80

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.

  config.vm.network "private_network", ip: "192.168.33.11"
  # config.vm.network "private_network", type: "dhcp"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # custom share folders...
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "./workspace", "/opt/workspace", type: "rsync", rsync__exclude: ".git/"

  # insure docker is loaded with all the default public images
  config.vm.provision "docker" do |d|
    # the runtime node...
    d.pull_images "mhart/alpine-node:base-8"
    d.pull_images "lyft/envoy-alpine:latest"
    d.pull_images "openjdk:8-jre-alpine"
  end

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    # vb.memory = "1024"
    vb.cpus = 2

    vb.name = $instance_name
  end
  config.vm.hostname = $instance_name

  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # this, plus your public rsa/dsa configuration gives you the ability to
  # ssh into the VM as an alternate user

  config.ssh.forward_agent = true

  # post install scripts
  # config.vm.provision "file", source:"install-scripts/nofile.conf", destination: "/etc/security/limits.d/nofile.conf"
  config.vm.provision "file", source:"install-scripts/std-alias", destination: ".alias"
  config.vm.provision "file", source:"install-scripts/std-bashrc", destination: ".bashrc"
  config.vm.provision "file", source:"install-scripts/std-vimrc", destination: ".vimrc"
  config.vm.provision "shell", path: "install-scripts/centos-core.sh"
  config.vm.provision "shell", path: "install-scripts/install-git.sh"
  config.vm.provision "shell", path: "install-scripts/install-nodejs.sh"
  config.vm.provision "shell", path: "install-scripts/install-golang.sh"
  config.vm.provision "shell", path: "install-scripts/install-jdk8.sh"
  # groovy, gradle, maven
  config.vm.provision "shell", path: "workspace/bin/post-install.sh"

end
